buildscript {
  configurations.classpath {
    resolutionStrategy {
      //This is required by 'git-publish' version '3.0.0':
      force 'org.eclipse.jgit:org.eclipse.jgit:5.10.0.202012080955-r'
    }
  }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'org.asciidoctor.jvm.convert' version '3.3.0'
    id 'org.ajoberstar.git-publish' version '3.0.0'
    id 'com.diffplug.spotless' version '5.1.1'
    id 'net.researchgate.release' version '2.6.0'
    id "de.marcphilipp.nexus-publish" version '0.2.0'
}

wrapper {
    gradleVersion = '6.7.1'
}

group = 'fr.jmini.asciidoctorj'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

signing {
    useGpgCmd()
    sign(publishing.publications)
}

tasks.withType(Sign) {
    onlyIf {
        project.hasProperty('signing.gnupg.keyName')
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.asciidoctor:asciidoctorj:$asciidoctorjVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'AsciidoctorJ git-link'
                description = 'AsciidoctorJ macro to create links to git repositories'
                packaging = 'jar'
                url = 'https://' + "$githubRepositoryOwner" + '.github.io/' + "$githubRepositoryName" + '/'
                licenses {
                    license {
                        name = 'Eclipse Public License - v 1.0'
                        url = 'http://www.eclipse.org/legal/epl-v10.html'
                    }
                }
                developers {
                    developer {
                        id = 'jmini'
                        name = 'Jeremie Bresson'
                        email = 'dev@jmini.fr'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
                    developerConnection = 'scm:git:https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
                    url = 'https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '/'
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

nexusPublishing {
    packageGroup = 'fr.jmini'
    username = project.findProperty('sonatypeUser') ?: ''
    password = project.findProperty('sonatypePassword') ?: ''
}

def buildDate() {
    return new Date().format('yyyy-MM-dd')
}

configurations {
    asciidoctorExtensions
}

asciidoctorj {
    version = "$asciidoctorjVersion"
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    sourceDir = file('src/docs/asciidoc')
    baseDirFollowsSourceFile()
    outputDir = file('build/docs/html5')
    attributes = ['revdate'             : "${buildDate()}",
                  'project-version'     : "$version",
                  'asciidoctorj-version': "$asciidoctorjVersion",
                  'source-highlighter'  : 'coderay',
                  'imagesdir'           : '',
                  'toc'                 : 'left',
                  'icons'               : 'font',
                  'toclevels'           : '3',
                  'sectanchors'         : 'true',
                  'idprefix'            : '',
                  'idseparator'         : '-',
                  'docinfo1'            : 'true']
    dependencies {
        asciidoctorExtensions project(':')
    }
}

gitPublish {
    repoUri = 'git@github.com:' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
    branch = 'gh-pages'

    contents {
        from "${file('build/docs/html5')}"
    }

    preserve {
        include '.nojekyll'
        exclude '.DS_Store'
    }

    commitMessage = "Update the 'gh-pages' branch."
}

spotless {
  java {
    importOrder 'java', 'javax', 'org', 'com', ''
    removeUnusedImports()

    // available versions are: https://github.com/diffplug/spotless/tree/master/lib-extra/src/main/resources/com/diffplug/spotless/extra/eclipse_jdt_formatter
    eclipse('4.13.0').configFile('.settings/org.eclipse.jdt.core.prefs')
  }
}

release {
    buildTasks = ['doRelease']
}

task doRelease {
    dependsOn(
        'publishToNexus',
        'asciidoctor',
        'gitPublishPush'
    )
}